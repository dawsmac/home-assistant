- alias: Morning mode
  trigger:
  - platform: time
    at: input_datetime.rd_android_alarm
  condition:
  - condition: time 
    after: '05:00:00'
    before: '09:59:00' 
  action:
  - service: input_select.select_option
    data_template:
      entity_id: input_select.house_mode
      option: >
        {% if states('sensor.out_side_lux') > '2000' %}
          Morning
        {% else %}
          Morning+lights
        {% endif %}

- alias: Day mode
  trigger:
  - platform: time
    at: "10:00:00"
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.house_mode
      option: Day

- alias: Evening mode
  trigger:
  - platform: numeric_state
    entity_id: sensor.out_side_lux
    below: 2500
  condition:
  - condition: time 
    after: '15:15:00' 
  - condition: template
    value_template: "{{ state_attr('sun.sun', 'rising') == false }}"
  - condition: template
    value_template: "{{ state_attr('sun.sun', 'elevation') > -18 }}"
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.house_mode
      option: Evening


- alias: Night mode
  trigger:
  - platform: state
    entity_id: sensor.us_pirs
    to: 'True'
    for:
      minutes: 20
  condition:
  - condition: state
    entity_id: sensor.ds_pirs
    state: 'True'
    for:
      minutes: 15
  - condition: numeric_state
    entity_id: sensor.out_side_lux
    below: 4  
  - condition: state
    entity_id: binary_sensor.lounge_tv_status
    state: 'off'
  - condition: template
    value_template: '{{ state_attr("sun.sun", "elevation") < -18 }}' 
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.house_mode
      option: Night

- alias: Set Scene House Mode
  trigger:
  - platform: state
    entity_id: input_select.house_mode
  action:
  - service: scene.turn_on
    data_template:
      entity_id: >
        {%- if is_state('input_select.house_mode' , 'Morning') %}
          scene.morning
        {%- elif is_state('input_select.house_mode' , 'Day') %}
          scene.day
        {% elif is_state('input_select.house_mode' , 'Evening') %}
          scene.evening_lights
        {% elif is_state('input_select.house_mode' , 'Night') %}  
          scene.nightmode
        {% endif %}


- alias: gone out and left the lights on
  trigger:
  - platform: state
    entity_id: sensor.all_pirs
    to: 'true'
    for:
      minutes: 20
  condition:
    condition: not
    conditions:
      - condition: state
        entity_id: group.persons
        state: 'home'
  action:
  - service: light.turn_off
    entity_id: all

  
- alias: Out hours movment
  trigger:
  - platform: state
    entity_id:
      - binary_sensor.porch_movement
      - binary_sensor.backgarden_movement
      - binary_sensor.coop_movement
      - binary_sensor.driveway_movement
      - binary_sensor.sidedrive_movement
    to: 'on'
  condition:
  - condition: state
    entity_id: input_select.house_mode
    state: Night
  action:
  - service: notify.mobile_app_sm_g973f
    data:
      message: >
        Night mode enabled: At {{states('sensor.time')}} movement on {{trigger.to_state.name}} camera!

- alias: Someone has entered house perimeter (no one is home)
  trigger:
  - platform: state
    entity_id:
      - binary_sensor.porch_movement
      - binary_sensor.backgarden_movement
      - binary_sensor.driveway_movement
    to: 'on'
  condition:
    condition: not
    conditions:
      - condition: state
        entity_id: group.persons
        state: 'home'
  action:
  - service: notify.mobile_app_sm_g973f
    data:
      message: >
        Everyone is out: At {{states('sensor.time')}} movement on {{trigger.to_state.name}} camera!









