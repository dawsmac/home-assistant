- alias: Heating On
  trigger:
  - platform: template
    value_template: >
      {{ is_state('switch.downstairs_radiators', 'on') or
        is_state('switch.upstairs_radiators', 'on') or
        is_state('switch.underfloor_heating', 'on') }}
  condition:
    condition: not
    conditions:
      - condition: state
        entity_id: switch.boiler_call
        state: 'on'
  action:
  - service: switch.turn_on
    entity_id: switch.boiler_call


- alias: Hotwater on
  trigger:
  - platform: state
    entity_id: switch.hotwater
    to: 'on'
  action:
  - condition: not
    conditions:
      - condition: state
        entity_id: person.richard_dawson
        state: 'not_home'
      - condition: state
        entity_id: person.faye_dawson
        state: 'not_home'
      - condition: state
        entity_id: switch.boiler_call
        state: 'on'
      - condition: state
        entity_id: input_select.house_mode
        state: 'Night'
  - service: switch.turn_on
    entity_id: switch.boiler_call


- alias: Hotwater HA restart / Morning
  trigger:
    - platform: homeassistant
      event: start
    - platform: state
      entity_id: input_select.house_mode
      to: "Morning"
    - platform: state
      entity_id: input_select.house_mode
      to: "Morning+lights"
  condition: 
    - condition: state
      entity_id: binary_sensor.cylinder_thermostats
      state:   "off"
  action:
    - service: switch.turn_on
      entity_id: switch.hotwater


- alias: Heating Off
  trigger:
  - platform: template
    value_template: >
      {{ is_state('switch.downstairs_radiators', 'off') and
        is_state('switch.underfloor_heating', 'off') and
        is_state('switch.upstairs_radiators', 'off') and
        is_state('switch.hotwater', 'off') }}
  action:
  - service: switch.turn_off
    entity_id: switch.boiler_call
  

    
- alias: Heating control are on and working 
  trigger:
  - platform: template
    value_template: >
      {{ is_state('binary_sensor.heating_controls_node_05' , 'on') and
        is_state('binary_sensor.heating_controls_node_02' , 'on') and
        is_state('binary_sensor.boiler_node_03' , 'on') }}
  action:
  - service: homeassistant.turn_on
    entity_id: automation.heating_on

- alias: Heating control are off time to investagate  
  trigger:
  - platform: template
    value_template: >
      {{ is_state('binary_sensor.heating_controls_node_05' , 'off') or
        is_state('binary_sensor.heating_controls_node_02' , 'off') or
        is_state('binary_sensor.boiler_node_03' , 'off') }}
  action:
  - service: homeassistant.turn_off
    entity_id: 
      - automation.heating_on
      - switch.boiler_call
  - delay: 2:00    
  - service: notify.mobile_app_sm_g973f
    data_template:
      message: >
        {% if is_state('binary_sensor.heating_controls_node_05' , 'off') or
          is_state('binary_sensor.underfloor_heating_node_02' , 'off' ) or
          is_state('binary_sensor.boiler_node_03' , 'off') %}
          Heating Control has been disabled, please investage!
        {% else %}
          Heating ControlÂ´s are back on and working!
        {% endif %}

- alias: Morning Heating 
  trigger:
  - platform: template
    value_template: "{{ states('sensor.time') == ( states.input_datetime.rd_android_alarm.attributes.timestamp | int - 1800 ) | timestamp_custom('%H:%M', False) }}"
  - platform: state
    entity_id: input_select.house_mode
    to:  Morning
  - platform: state
    entity_id: input_select.house_mode
    to:  Morning+lights
  condition:
    condition: and
    conditions:
      - condition: time
        after: " 05:00:00"
        before: " 10:00:00"
      - condition: or
        conditions:
          - condition: state
            entity_id: 'person.richard_dawson'
            state: 'home' 
          - condition: state
            entity_id: 'person.faye_dawson'
            state: 'home'  
  action:
  - service: climate.set_temperature
    data:
      entity_id: climate.upstairs
      temperature: 20
      hvac_mode: heat
  - service: climate.set_temperature
    data:
      entity_id: climate.downstairs
      temperature: 20
      hvac_mode: heat

- alias: Day mode Heating
  trigger:
  - platform: state
    entity_id: input_select.house_mode
    to:  Day
  action:
  - service: climate.set_temperature
    data:
      entity_id: climate.upstairs
      temperature: 18
      hvac_mode: heat

- alias: Night mode Heating
  trigger:
  - platform: state
    entity_id: input_select.house_mode
    from:  Evening
    to:  Night
  action:
  - service: climate.set_temperature
    data:
      entity_id: climate.upstairs
      temperature: 18
      hvac_mode: heat
  - service: climate.set_temperature
    data:
      entity_id: climate.downstairs
      temperature: 18
      hvac_mode: heat

- alias: No ones home turn off Heating
  trigger:
  - platform: template
    value_template: >
      {{ is_state('person.faye_dawson', 'not_home') and
        is_state('person.richard_dawson', 'not_home') }}
    for:
      minutes: 20
  action:
  - service: climate.set_preset_mode 
    data:
      entity_id: climate.upstairs
      preset_mode: away
  - service: climate.set_preset_mode 
    data:
      entity_id: climate.downstairs
      preset_mode: away

- alias: home Turn on Heating
  trigger:
  - platform: template
    value_template: >
      {{ is_state('person.faye_dawson', 'home') or
        is_state('person.richard_dawson', 'home') }}
  action:
  - service: climate.set_preset_mode 
    data:
      entity_id: climate.kitchen
      preset_mode: none
      hvac_mode: heat
  - service: climate.set_preset_mode 
    data:
      entity_id: climate.upstairs
      preset_mode: none
      hvac_mode: heat
  - service: climate.set_preset_mode 
    data:
      entity_id: climate.downstairs
      preset_mode: none
      hvac_mode: heat
